name: CI with Ollama

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  OLLAMA_MODEL: tinyllama  # ~600MB - blazing fast CI!
                           # Other options: phi (1.3GB), llama2:7b (3.8GB), mistral:7b (4.1GB)

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Create test environment
      run: |
        echo "CHAT_PROVIDER=ollama" > .env
        echo "CHAT_MODEL=${{ env.OLLAMA_MODEL }}" >> .env
        echo "OLLAMA_HOST=http://localhost:11434" >> .env

    - name: Cache Ollama models
      uses: actions/cache@v4
      id: ollama-cache
      with:
        path: ~/.ollama/models
        key: ollama-models-${{ env.OLLAMA_MODEL }}-${{ runner.os }}
        restore-keys: |
          ollama-models-tinyllama-
          ollama-models-

    - name: Show cache status
      run: |
        if [ "${{ steps.ollama-cache.outputs.cache-hit }}" == "true" ]; then
          echo "‚úÖ Using cached ${{ env.OLLAMA_MODEL }} model (~600MB saved!)"
          MODEL_SIZE=$(du -sh ~/.ollama/models/ 2>/dev/null | cut -f1 || echo "unknown")
          echo "üíæ Cached models size: $MODEL_SIZE"
          echo "‚ö° CI will be ~2-3 minutes faster!"
        else
          echo "üì• Downloading ${{ env.OLLAMA_MODEL }} model (~600MB)"
          echo "üêå First run will be slower, but subsequent runs will be cached"
        fi

    - name: Install Ollama
      uses: ai-action/ollama-action@v1
      with:
        model: ${{ env.OLLAMA_MODEL }}

    - name: Verify Ollama setup
      run: |
        echo "Checking Ollama status..."
        curl -s http://localhost:11434/api/tags | jq '.models[0].name'

    - name: Run Ollama client tests
      run: |
        timeout 30 python test_ollama.py

    - name: Run pytest tests
      run: |
        python -m pytest -v --tb=short -m "not integration"

    - name: Run integration tests (with Ollama)
      run: |
        python -m pytest -v --tb=short -m integration